1) identify slow queries that other people have encountered
   (or applications that have to update their own database from the original database)
2) elaborate on the queries' requirements and scope
   (per product, metadata_type, all datasets)
Experiments on local database:
1) measure values before creating index (query and insert times, database size)
2) create an index that improves query time
3) measure values after creating index
4) develop case for creation or reason not to create respective indexes


find all lines that begin with 2018 and don't have the word select in it
^\s*2018((?!select).)*$

highlight parts of lines beginning with 2018 and up to a colon ':' without including select
^\s*2018((?!select).)*:\s*

find all lines with the words "duration" and "select" but not count
duration\: \d{5,}.*select((?!count).)*$


Run pgadmin4 locally
python C:\Users\U33522\AppData\Local\Continuum\anaconda3\envs\DEA\Lib\site-packages\pgadmin4\pgAdmin4.py


Creating new products are slow - remove creation of partial indexes - just maintain one large index
Saves the database from having to create a bunch of new indexes every time a product is created, it just needs to update
the index